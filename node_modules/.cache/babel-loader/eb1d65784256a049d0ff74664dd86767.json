{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/React/React.ucenje/File2/my-file2/src/Popup/Usluge.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usluge = [{\n  id: 0,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}, {\n  id: 1,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}, {\n  id: 2,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}, {\n  id: 3,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}, {\n  id: 4,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}, {\n  id: 5,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}, {\n  id: 6,\n  value: \"Zamjena ulja i filtera (500)\",\n  isChecked: false,\n  price: 500\n}];\n\nconst Usluge = () => {\n  _s();\n\n  const [checkusluge, updateUsluge] = useState(usluge); //izmjena usluga\n  // promjena charakters array\n\n  const setInput = (i, value) => {\n    updateUsluge(checkusluge.map(us => us.id === i ? { ...us,\n      isChecked: value\n    } : { ...us\n    }));\n  }; //mapiranje liste prikaza\n\n\n  const listausluga = checkusluge.map((item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: item.value,\n        checked: item.isChecked,\n        onChange: e => setInput(item.id, e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), item.value]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listausluga\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Usluge, \"HTrJWyYTvq/fkpoJzYNiq/QaRyw=\");\n\n_c = Usluge;\nexport default Usluge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Usluge\");","map":{"version":3,"sources":["/home/ivan/Desktop/React/React.ucenje/File2/my-file2/src/Popup/Usluge.js"],"names":["React","useState","useEffect","usluge","id","value","isChecked","price","Usluge","checkusluge","updateUsluge","setInput","i","map","us","listausluga","item","e","target","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;AAGA,MAAMC,MAAM,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CADW,EAEX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CAFW,EAGX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CAHW,EAIX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CAJW,EAKX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CALW,EAMX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CANW,EAOX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,8BAAhB;AAAgDC,EAAAA,SAAS,EAAE,KAA3D;AAAmEC,EAAAA,KAAK,EAAC;AAAzE,CAPW,CAAf;;AAWA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAGjB,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BT,QAAQ,CAACE,MAAD,CAA5C,CAHiB,CAGqC;AAGtD;;AACF,QAAMQ,QAAQ,GAAG,CAACC,CAAD,EAAIP,KAAJ,KAAc;AAC7BK,IAAAA,YAAY,CACVD,WAAW,CAACI,GAAZ,CAAiBC,EAAD,IACdA,EAAE,CAACV,EAAH,KAAUQ,CAAV,GAAc,EAAE,GAAGE,EAAL;AAASR,MAAAA,SAAS,EAAED;AAApB,KAAd,GAA4C,EAAE,GAAGS;AAAL,KAD9C,CADU,CAAZ;AAKD,GAND,CAPmB,CAenB;;;AACE,QAAMC,WAAW,GAAGN,WAAW,CAACI,GAAZ,CAAgB,CAACG,IAAD,EAAOJ,CAAP,KAAa;AAC7C,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAEI,IAAI,CAACX,KAFd;AAGE,QAAA,OAAO,EAAEW,IAAI,CAACV,SAHhB;AAIE,QAAA,QAAQ,EAAGW,CAAD,IAAON,QAAQ,CAACK,IAAI,CAACZ,EAAN,EAAUa,CAAC,CAACC,MAAF,CAASC,OAAnB;AAJ3B;AAAA;AAAA;AAAA;AAAA,cADF,EAOGH,IAAI,CAACX,KAPR;AAAA,OAAYO,CAAZ;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZiB,CAApB;AAcA,sBACI;AAAA,cAEKG;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApCD;;GAAMP,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect }from 'react'\n\n\nconst usluge = [\n    { id: 0, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n    { id: 1, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n    { id: 2, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n    { id: 3, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n    { id: 4, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n    { id: 5, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n    { id: 6, value: \"Zamjena ulja i filtera (500)\", isChecked: false , price:500 },\n  ];\n  \n\nconst Usluge = () => {\n\n  \n    const [checkusluge, updateUsluge] = useState(usluge); //izmjena usluga\n\n\n    // promjena charakters array\n  const setInput = (i, value) => {\n    updateUsluge(\n      checkusluge.map((us) =>\n        us.id === i ? { ...us, isChecked: value } : { ...us }\n      )\n    );\n  };\n\n  //mapiranje liste prikaza\n    const listausluga = checkusluge.map((item, i) => {\n        return (\n          <label key={i}>\n            <input\n              type=\"checkbox\"\n              value={item.value}\n              checked={item.isChecked}\n              onChange={(e) => setInput(item.id, e.target.checked)}\n            />\n            {item.value}\n          </label>\n        );\n      });\n\n    return (\n        <div>\n            \n            {listausluga}\n        </div>\n    )\n}\n\nexport default Usluge\n"]},"metadata":{},"sourceType":"module"}