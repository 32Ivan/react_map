{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/React/React.ucenje/File2/my-file2/src/component/Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst check = [{\n  id: 1,\n  value: \"Peugeot\",\n  isChecked: false\n}, {\n  id: 2,\n  value: \"Audi\",\n  isChecked: false\n}, {\n  id: 3,\n  value: \"Bmw\",\n  isChecked: false\n}, {\n  id: 4,\n  value: \"Seat\",\n  isChecked: false\n}, {\n  id: 5,\n  value: \"Kia\",\n  isChecked: true\n}, {\n  id: 6,\n  value: \"Honda\",\n  isChecked: false\n}];\nexport const Checkbox = props => {\n  _s();\n\n  const [characters, updateCharacters] = useState(check);\n\n  const handleCheckChieldElement = event => {\n    const items = characters;\n    items.forEach(item => {\n      if (item.value === event.target.value) {\n        console.log(event.target.value);\n        item.isChecked = event.target.checked;\n        console.log(event.target.checked);\n        updateCharacters(items);\n        console.log(items);\n      }\n    });\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: check.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleCheckChieldElement,\n          type: \"checkbox\",\n          value: item.value,\n          checked: item.isChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 27\n        }, this), item.value]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkbox, \"THSWIQtMs2lvGFm4YnFE6Vqavfk=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/home/ivan/Desktop/React/React.ucenje/File2/my-file2/src/component/Checkbox.js"],"names":["React","useState","useEffect","Fragment","check","id","value","isChecked","Checkbox","props","characters","updateCharacters","handleCheckChieldElement","event","items","forEach","item","target","console","log","checked","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,KAAK,GAAG,CACV;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,SAAhB;AAA2BC,EAAAA,SAAS,EAAE;AAAtC,CADU,EAEV;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,MAAhB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAFU,EAGV;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,KAAhB;AAAuBC,EAAAA,SAAS,EAAE;AAAlC,CAHU,EAIV;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,MAAhB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAJU,EAKV;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,KAAhB;AAAuBC,EAAAA,SAAS,EAAE;AAAlC,CALU,EAMV;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,OAAhB;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CANU,CAAd;AASA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAE7B,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCV,QAAQ,CAACG,KAAD,CAA/C;;AAEA,QAAMQ,wBAAwB,GAAIC,KAAD,IAAW;AACxC,UAAMC,KAAK,GAAGJ,UAAd;AACAI,IAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAIA,IAAI,CAACV,KAAL,KAAeO,KAAK,CAACI,MAAN,CAAaX,KAAhC,EAAsC;AACpCY,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,MAAN,CAAaX,KAAzB;AACFU,QAAAA,IAAI,CAACT,SAAL,GAAiBM,KAAK,CAACI,MAAN,CAAaG,OAA9B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,MAAN,CAAaG,OAAzB;AACAT,QAAAA,gBAAgB,CAACG,KAAD,CAAhB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACC;AACF,KARD;AAUD,GAZH;;AAgBAZ,EAAAA,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGN,EAHM,CAAT;AAMA,sBACI,QAAC,QAAD;AAAA,cAEEE,KAAK,CAACiB,GAAN,CAAWL,IAAD,IAAU;AACN,0BACE;AAAA,gCACA;AACE,UAAA,QAAQ,EAAEJ,wBADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAEI,IAAI,CAACV,KAHd;AAIE,UAAA,OAAO,EAAEU,IAAI,CAACT;AAJhB;AAAA;AAAA;AAAA;AAAA,gBADA,EAOCS,IAAI,CAACV,KAPN;AAAA,SAAYU,IAAI,CAACX,EAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZb;AAFF;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA/CM;;GAAMG,Q;;KAAAA,Q;AAiDb,eAAeA,QAAf","sourcesContent":["import React, { useState,useEffect, Fragment } from 'react'\n\nconst check = [\n    { id: 1, value: \"Peugeot\", isChecked: false },\n    { id: 2, value: \"Audi\", isChecked: false },\n    { id: 3, value: \"Bmw\", isChecked: false },\n    { id: 4, value: \"Seat\", isChecked: false },\n    { id: 5, value: \"Kia\", isChecked: true },\n    { id: 6, value: \"Honda\", isChecked: false },\n  ];\n\nexport const Checkbox = props => {\n\n    const [characters, updateCharacters] = useState(check);\n\n    const handleCheckChieldElement = (event) => {\n        const items = characters;\n        items.forEach((item) => {\n          if (item.value === event.target.value){ \n            console.log(event.target.value);\n          item.isChecked = event.target.checked;\n          console.log(event.target.checked);\n          updateCharacters(items);\n          console.log(items)\n          }\n        });\n    \n      };\n\n    \n    \n    useEffect(() => {\n        \n        \n    }, [])\n    \n    \n    return (\n        <Fragment>\n          {\n          check.map((item) => {\n                        return (\n                          <label key={item.id}>\n                          <input\n                            onChange={handleCheckChieldElement}\n                            type=\"checkbox\"\n                            value={item.value}\n                            checked={item.isChecked}\n                          />\n                          {item.value}\n                    </label>\n                        );\n                      })\n\n          }\n      </Fragment>\n    \n    )\n}\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}